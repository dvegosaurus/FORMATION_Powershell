https://chroche.blob.core.windows.net/documents/docps.zip

Syntax :
 [] = facultatif
 <> = Obligatoire

Get-command :
    liste aussi les éxécutable connu
    get-command -CommandType Application

test-connection -quiet >> retourne un booléen

get-aduser >> données fournis en XML


#  raccourcis
ctrl + espace >> reactive tabulation

# measure-object 
y penser pour date et taille (max et min pour plus grand, plus ancien)

# forcz un cmdlet a renvoyer quelque chose
-passthru

# Splatting : accectpe des noms court pour les paramètres
WMI:
* WS-Man WebSerser Management
* WBEM : normalisation des accès a divers composant via CIM (Common Information Model)
* WMI : Windows Management Instrumentation (winmgts.exe >> composant COM interrog" via RPC
* MOF: Manage Object Format (dossiers WBEM dans %OSPath%\System ... avec liste des sources)
* COM: Common Objet Model
*Remote Procedure Call:
get-wmi >> DCOM donc RPC
get-cim >> WS-Man
Exemple de souscription WMI:
- Kill de process (jeux)
- Reconfiguration auto d'Application
- Gestion de la config des postes (i.e: Economie d'energie)
note rgou: on pourrait aussi passer par un service powershell


invoke WMI Method:

gwmi | foreach {appelle la methode}


[string](1..10)
$ofs = ","


# debug
pas a pas:
Step Over : ne rentre pas dans les fonctions
step into  : rnetre dans les fonctions
Step Out : sort d'une fonction

En debug ISE a le contenu des variables (mouse over)

# try / Catch:
utilise $_ pour l'erreur en cours
du coup $error[0] == $_ 

# PSDrive lecteur function
Remove-item function:\Mafonction
get-item function:\mafonction

# scope : recherche par defaut dans les scope supérieur mais lecture only


# Winrm >> execute dans wsmprovhost (poste distant)


# invoke-command :
$using: >> autorisé en invoke-command
param() >> autorisé (stop faire du $totot = $args[0])

#double-hop:
configuration des CredSSP (poste client + serveur de rebond)
ou set-ADComputer -identity -allow (ressource based )

import-PSSession : la session est stocké en local dans AppData\temp

$DC = New-PSSession LON-DC1

get-module -ListAvailable -PSSession $DC
Import-Module -PSSession $DC -name SmbShare -prefix xxx


Get-xxxSmbshare | % {

if (!(Test-Path $_.path)){New-Item $_.path -ItemType Directory -force}
New-SmbShare -Path $_.path -Description "auto created" -name $_.name 

}
get-smbshare